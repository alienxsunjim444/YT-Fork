# jarvis_bot.py
import requests
from flask import Flask, request, jsonify
from datetime import datetime

app = Flask(__name__)

ACCESS_TOKEN = "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞_‡¶´‡ßá‡¶∏‡¶¨‡ßÅ‡¶ï_‡¶™‡ßá‡¶ú_‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶∏_‡¶ü‡ßã‡¶ï‡ßá‡¶®"
VERIFY_TOKEN = "‡¶Ø‡ßá_‡¶ü‡ßã‡¶ï‡ßá‡¶®_‡¶§‡ßÅ‡¶Æ‡¶ø_‡¶´‡ßá‡¶∏‡¶¨‡ßÅ‡¶ï_‡¶¶‡¶ø‡ßü‡ßá_‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá"

def send_message(recipient_id, message_text):
    url = f"https://graph.facebook.com/v15.0/me/messages?access_token={ACCESS_TOKEN}"
    payload = {
        "recipient": {"id": recipient_id},
        "message": {"text": message_text}
    }
    response = requests.post(url, json=payload)
    return response.json()

def jarvis_response(message_text):
    message_text = message_text.lower()
    
    if "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã" in message_text or "hello" in message_text:
        return "‡¶ì‡¶π‡ßã! ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ, ‡¶¨‡¶∏ üòé ‡¶Ü‡¶Æ‡¶ø Jarvis‡•§"
    elif "‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã" in message_text:
        return "‡¶∏‡¶¨ ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá! ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã?"
    elif "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ï‡¶ø" in message_text:
        return "‡¶Ü‡¶Æ‡¶ø Jarvis, ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∏‡¶π‡¶ï‡¶æ‡¶∞‡ßÄ‡•§"
    elif "‡¶∏‡¶Æ‡ßü ‡¶ï‡¶§" in message_text or "time" in message_text:
        now = datetime.now().strftime("%I:%M %p")
        return f"‡¶¨‡¶∏, ‡¶∏‡¶Æ‡ßü ‡¶è‡¶ñ‡¶® {now}‡•§"
    elif "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶" in message_text or "thank you" in message_text:
        return "‡¶∏‡¶¨ ‡¶∏‡¶Æ‡ßü‡¶á ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§, ‡¶¨‡¶∏‡•§"
    else:
        return "‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá, ‡¶¨‡¶∏‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡ßá‡¶ü‡¶æ ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶õ‡¶ø‡•§"

@app.route("/webhook", methods=["GET", "POST"])
def webhook():
    if request.method == "GET":
        token_sent = request.args.get("hub.verify_token")
        return request.args.get("hub.challenge") if token_sent == VERIFY_TOKEN else "Invalid verification token"
    
    if request.method == "POST":
        data = request.get_json()
        for entry in data.get("entry", []):
            for messaging_event in entry.get("messaging", []):
                sender_id = messaging_event["sender"]["id"]
                if "message" in messaging_event and "text" in messaging_event["message"]:
                    message_text = messaging_event["message"]["text"]
                    response_text = jarvis_response(message_text)
                    send_message(sender_id, response_text)
        return "ok", 200

if __name__ == "__main__":
    app.run(port=5000)
